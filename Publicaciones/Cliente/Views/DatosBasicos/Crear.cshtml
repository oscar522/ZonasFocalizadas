@model AspNetIdentity.Models.HvDatosBasicosModel
@section Scripts
    {
    <script type="text/javascript">

            $(document).ready(function ()
            {
                // convert to base64 file
                var handleFileSelect = function (evt) {
                     var files = evt.target.files;
                     var Path = $('#ImageNameArc1').val();
                        var file = files[0];
                        if (files && file) {
                            var reader = new FileReader();

                            reader.onload = function(readerEvt) {
                                var binaryString = readerEvt.target.result;
                                document.getElementById("ImageName").value = btoa(binaryString);
                                $('label[for="ImageNameArc1"]').text(Path);
                            };
                            reader.readAsBinaryString(file);
                        }
                    };

                    if (window.File && window.FileReader && window.FileList && window.Blob) {
                        document.getElementById('ImageNameArc1').addEventListener('change', handleFileSelect, false);
                    } else {
                        alert('The File APIs are not fully supported in this browser.');
                    }


                $("#car-form").submit(function (event) {
                     //validar extencion de archivo
                    var ext = $('#ImageNameArc1').val().split('.').pop().toLowerCase();
                    if ($('#ImageNameArc1').val() == '') {
                            $('span[data-valmsg-for="ImageName"]').text("Cargue una imagen");//ButtonSubmit
                            $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema por favor verifique la informacion ingresa");//ButtonSubmit
                            return false;
                        }else if ($('#ImageNameArc1')[0].files[0].size > 50000) {
                            $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema por favor verifique la informacion ingresa");//ButtonSubmit
                            $('span[data-valmsg-for="ImageName"]').text("La imagen debe pesar menos de 50 Kb");
                            return false;
                        } else {
                            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
                                $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema, por favor verifique la informacion ingresa");//ButtonSubmit
                                $('span[data-valmsg-for="ImageName"]').text("El Archivo debe ser una imagen 'gif', 'png', 'jpg', 'jpeg' ");
                                return false;
                            }
                    }
                    //return false;
                    $( "#car-form" ).submit();
                });

                $('select').select2({
                    minimumResultsForSearch: -1
                });

                $(".requerido").text("*");
                $(".requerido").addClass("red-text");

                // catalodos select generales

                $(document).on('click', '.card-header', function (event) {
                    let id = this.id;
                    $('.catalogo').fadeOut(1000);
                    $('.Div' + id + 'Body').fadeIn(1000);
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListTipoIdentificacion")',
                    dataType: 'json',
                    success: function(states) {
                        //   alert("ok_pais");
                        $.each(states, function (i, state) {
                        if ('@Model.ID_CT_TIPO_IDENTIFICACION' == state.Value) {
                            $("#ID_CT_TIPO_IDENTIFICACION").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_CT_TIPO_IDENTIFICACION").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }

                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListPerfil")',
                    dataType: 'json',
                    success: function(states) {
                        $.each(states, function (i, state) {
                        if ('@Model.ID_PERFIL' == state.Value) {
                            $("#ID_PERFIL").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_PERFIL").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }

                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListEstadoCivil")',
                    dataType: 'json',
                    success: function(states) {

                        $.each(states, function (i, state) {

                        if ('@Model.ID_CT_ESTADO_CIVIL' == state.Value) {
                            $("#ID_CT_ESTADO_CIVIL").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_CT_ESTADO_CIVIL").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }
                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListPais")',
                    dataType: 'json',
                    success: function(states) {
                        $.each(states, function (i, state) {
                            if ('@Model.ID_CT_PAIS' == state.Value) {
                                $("#ID_CT_PAIS").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                CargaDepto();
                        } else {
                            $("#ID_CT_PAIS").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }
                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                function CargaDepto() {
                    $("#ID_CT_DEPTO").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListDeptoId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_PAIS").val() },
                            success: function(states) {
                                $("#ID_CT_DEPTO").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_DEPTO' == state.Value) {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                        CargCiudad();
                                    } else {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    })
                    return false;
                    };

                function CargCiudad () {
                    $("#ID_CT_CIUDAD").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListCiudadId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_DEPTO").val() },
                            success: function(states) {
                                $("#ID_CT_CIUDAD").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_CIUDAD' == state.Value) {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    })
                    return false;
                };

                $("#ID_CT_PAIS").change(function () {
                    $("#ID_CT_DEPTO").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListDeptoId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_PAIS").val() },
                            success: function(states) {
                                $("#ID_CT_DEPTO").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_DEPTO' == state.Value) {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    });
                    return false;
                });

                $("#ID_CT_DEPTO").change(function () {
                    $("#ID_CT_CIUDAD").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListCiudadId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_DEPTO").val() },
                            success: function(states) {
                                $("#ID_CT_CIUDAD").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_CIUDAD' == state.Value) {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    });
                    return false;
                });

                $.ajax({
                type: 'POST',
                url: '@Url.Action("ListGenero")',
                dataType: 'json',
                success: function(states) {
                    $.each(states, function (i, state) {
                            if ('@Model.GENERO' == state.Value) {
                                $("#GENERO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                            } else {
                                $("#GENERO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                            }
                    });
                },
                error: function (ex) {
                    console.log(ex.responseText);
                }
                });

                // barra progreso
        });

    </script>
}

<div class="card mb-4 wow fadeIn">

    <!--Card content-->
    <div class="card-body d-sm-flex justify-content-between">
        <h3 class="card-title">Crear Datos Basicos</h3>
        <p class="card-text">Hoja de Vida / Datos Basicos </p>
    </div>

</div>

@Html.AntiForgeryToken()
<div class="row wow fadeIn">
    <div class="col-md-12">
        @using (Html.BeginForm("Crear", "HvDatosBasicos", FormMethod.Post, htmlAttributes: new { id = "car-form", @name = "car-form", enctype = "multipart/form-data" }))
        {
            <div class="card">
                <div class="card-header card text-white bg-primary blue darken-3 text-right "><h4>Informacion Personal </h4> </div>
                <div class="card-body">
                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-3 center-block text-center">
                                    <div id="DivImageName ">
                                        <figure>
                                            <img src="../../@Model.ImageName" class='img-fluid text-center img-responsive center-block'>
                                        </figure>
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Cargar Imagen</label>
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="ImageNameArc1" name="ImageNameArc" aria-describedby="inputGroupFileAddon01">
                                        <label class="custom-file-label form-control" for="ImageNameArc1">Choose file</label>
                                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                                    </div>
                                    <div id="barra"></div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Nombres</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.NOMBRES, new { htmlAttributes = new { @class = "form-control boder ", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.NOMBRES, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Tipo Identificacion</label>
                                    <div class="col-sm-10">
                                        @Html.DropDownList("ID_CT_TIPO_IDENTIFICACION", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control border browser-default custom-select" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_TIPO_IDENTIFICACION, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Fecha de Nacimiento</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.F_NACIMIENTO, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.F_NACIMIENTO, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Contraseña</label>
                                    <div class="col-sm-10">
                                        @*@Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control", placeholder = "************", @readonly = "readonly" })*@
                                        <input type="password" value="@Model.PasswordHash" name="PasswordHash" id="PasswordHash" class="form-control boder" placeholder="************" readonly="readonly" />
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Apellidos</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.APELLIDOS, new { htmlAttributes = new { @class = "form-control boder ", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.APELLIDOS, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Numero de Identificacion</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.IDENTIFICACION, new { htmlAttributes = new { @class = "form-control boder " } })
                                        @Html.ValidationMessageFor(model => model.IDENTIFICACION, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> E-mail</label>
                                    <div class="col-sm-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control boder ", } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Confirmar Contraseña</label>
                                    <div class="col-sm-10">
                                        <input type="password" value="@Model.PasswordHash" name="PasswordHash2" id="PasswordHash2" class="form-control boder" placeholder="************" readonly="readonly" />
                                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header card text-white text-right bg-primary blue darken-3"><h4>Lugar de Nacimiento</h4> </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-2">
                            <strong class="requerido"></strong>  Pais
                        </div>
                        <div class="col-sm-4">
                            @Html.DropDownList("ID_CT_PAIS", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_CT_PAIS, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-2">
                            <strong class="requerido"></strong> Departamento
                        </div>
                        <div class="col-sm-4">
                            @Html.DropDownList("ID_CT_DEPTO", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_CT_DEPTO, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-2">
                            <strong class="requerido"></strong> Ciudad
                        </div>
                        <div class="col-sm-4">
                            @Html.DropDownList("ID_CT_CIUDAD", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ID_CT_CIUDAD, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header card text-white bg-primary text-right blue darken-3"><h4>Informacion General </h4> </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-2">
                                <strong class="requerido"></strong> Estado Civil
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("ID_CT_ESTADO_CIVIL", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.ID_CT_ESTADO_CIVIL, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.ID_CT_ESTADO_CIVIL, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                <strong class="requerido"></strong> Genero
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("GENERO", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GENERO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header card text-white text-right bg-primary blue darken-3"><h4>Perfil</h4> </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-2">
                                <strong class="requerido"></strong> Perfil
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("ID_PERFIL", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control ID_PERFIL select2-container" })
                                @Html.ValidationMessageFor(model => model.ID_PERFIL, "", new { @class = "text-danger" })<br>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-sm-2">
                                <strong class="requerido"></strong> Descripcion
                            </div>
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.DESCRIPCION, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DESCRIPCION, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card text-center">
                <div class="card-body">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.IMAGE_NAME, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_CIUDAD, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_DEPTO, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_PAIS, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_GENERO, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.ID_USERS, new { htmlAttributes = new { @Style = "display:none" } })
                        @Html.EditorFor(model => model.DIRECCION, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_ESTADO_CIVIL, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_TIPO_IDENTIFICACION, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.NOMBRE_PERFIL, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.USUARIO_CREO, new { htmlAttributes = new { @Style = "display:none" } })
                        @Html.EditorFor(model => model.USUARIO_CREO_NOMBRE, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.FECHA_CREO, new { htmlAttributes = new { @Style = "display:none", @Value = "26/11/2019 00:00:00" } })
                        @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @Style = "display:none", } })
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
                        @Html.EditorFor(model => model.IdAccount, new { htmlAttributes = new { @Style = "display:none" } })
                        <input type="submit" value="Crear" class="btn btn-primary align-content-center" />
                        <br />
                        <span class="field-validation-valid text-danger" data-valmsg-for="ButtonSubmit" data-valmsg-replace="true"></span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


