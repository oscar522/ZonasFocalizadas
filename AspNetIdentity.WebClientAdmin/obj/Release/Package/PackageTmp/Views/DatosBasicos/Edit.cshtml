@model AspNetIdentity.Models.HvDatosBasicosModel
@section Scripts
    {
    @Scripts.Render("~/Scripts/ModalControl.js")
    <script type="text/javascript">
            $(document).ready(function () {

                // convert to base64 file
                var handleFileSelect = function(evt) {
                    var files = evt.target.files;
                    var file = files[0];
                    var Path = $('#ImageNameArc1').val();

                    if (files && file) {
                        var reader = new FileReader();
                        reader.onload = function(readerEvt) {
                            var binaryString = readerEvt.target.result;
                            document.getElementById("ImageName").value = btoa(binaryString);
                            $('label[for="ImageNameArc1"]').text(Path);
                        };
                        reader.readAsBinaryString(file);
                    }
                };

                if (window.File && window.FileReader && window.FileList && window.Blob) {
                    document.getElementById('ImageNameArc1').addEventListener('change', handleFileSelect, false);
                } else {
                    alert('The File APIs are not fully supported in this browser.');
                    return false
                }

                $("#car-form").submit(function (event) {
                    // valida el correo electronico
                    var regex = new RegExp(/^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/);
                    if (!regex.test($('#Email').val().trim()))
                    {
                        $('span[data-valmsg-for="Email"]').text("Correo no validado ");
                        $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema por favor verifique la informacion ingresa");//ButtonSubmit
                        return false
                    }

                    // valida el password
                    if ($("#PasswordHash").val() != $("#PasswordHash2").val() ) {
                        $('span[data-valmsg-for="PasswordHash"]').text("Las contraseñas no coinciden");
                        $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema por favor verifique la informacion ingresa");//ButtonSubmit
                        return false
                    }

                      //validar extencion de archivo
                    var ext = $('#ImageNameArc1').val().split('.').pop().toLowerCase();
                    if ($('#ImageNameArc1').val() == '') {

                    } else if ($('#ImageNameArc1')[0].files[0].size > 50000) {
                        $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema por favor verifique la informacion ingresa");//ButtonSubmit
                        $('span[data-valmsg-for="ImageName"]').text("La imagen debe pesar menos de 50 Kb");
                        return false;
                    } else {
                        if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
                            $('span[data-valmsg-for="ButtonSubmit"]').text("Se presento un problema, por favor verifique la informacion ingresa");//ButtonSubmit
                            $('span[data-valmsg-for="ImageName"]').text("El Archivo debe ser una imagen 'gif', 'png', 'jpg', 'jpeg' ");
                            return false;
                        }
                    }

                    $( "#car-form" ).submit();
                });

                // imagen que trae la consulta
                var baseString = '@Model.IMAGE_NAME';

	            if(baseString.substring(0,4) != "data"){
		            baseString = "data:image/png;base64," + baseString;
	            }

	            $("#DivImageName2").prop('src',baseString);
	            $("#DivImageName2").show();
	            $("#DivImageName2").prop('href',baseString);


                $('.catalogo').hide();

                 // catalodos select generales

                $(document).on('click', '.card-header', function (event) {
                    let id = this.id;
                    $('.catalogo').fadeOut(1000);
                    $('.Div' + id + 'Body').fadeIn(1000);
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListTipoIdentificacion")',
                    dataType: 'json',
                    success: function(states) {
                        //   alert("ok_pais");
                        $.each(states, function (i, state) {
                        if ('@Model.ID_CT_TIPO_IDENTIFICACION' == state.Value) {
                            $("#ID_CT_TIPO_IDENTIFICACION").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_CT_TIPO_IDENTIFICACION").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }

                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                    });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListPerfil")',
                    dataType: 'json',
                    success: function(states) {
                        $.each(states, function (i, state) {
                        if ('@Model.ID_PERFIL' == state.Value) {
                            $("#ID_PERFIL").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_PERFIL").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }

                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                    });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListEstadoCivil")',
                    dataType: 'json',
                    success: function(states) {

                        $.each(states, function (i, state) {

                        if ('@Model.ID_CT_ESTADO_CIVIL' == state.Value) {
                            $("#ID_CT_ESTADO_CIVIL").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                        } else {
                            $("#ID_CT_ESTADO_CIVIL").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }
                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListPais")',
                    dataType: 'json',
                    success: function(states) {
                        $.each(states, function (i, state) {
                            if ('@Model.ID_CT_PAIS' == state.Value) {
                                $("#ID_CT_PAIS").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                CargaDepto();
                        } else {
                            $("#ID_CT_PAIS").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }
                        });
                    },
                    error: function (ex) {
                        console.log(ex.responseText);
                    }
                });

                function CargaDepto() {
                    $("#ID_CT_DEPTO").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListDeptoId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_PAIS").val() },
                            success: function(states) {
                                $("#ID_CT_DEPTO").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_DEPTO' == state.Value) {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                        CargCiudad();
                                    } else {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    })
                    return false;
                    };

                function CargCiudad () {
                    $("#ID_CT_CIUDAD").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListCiudadId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_DEPTO").val() },
                            success: function(states) {
                                $("#ID_CT_CIUDAD").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_CIUDAD' == state.Value) {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    })
                    return false;
                };

                $("#ID_CT_PAIS").change(function () {
                    $("#ID_CT_DEPTO").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListDeptoId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_PAIS").val() },
                            success: function(states) {
                                $("#ID_CT_DEPTO").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_DEPTO' == state.Value) {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_DEPTO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    });
                    return false;
                });

                $("#ID_CT_DEPTO").change(function () {
                    $("#ID_CT_CIUDAD").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListCiudadId")',
                        dataType: 'json',
                        data: { IdP: $("#ID_CT_DEPTO").val() },
                            success: function(states) {
                                $("#ID_CT_CIUDAD").append('<option value="">Seleccione</option>');
                                $.each(states, function (i, state) {
                                    if ('@Model.ID_CT_CIUDAD' == state.Value) {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                                    } else {
                                        $("#ID_CT_CIUDAD").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                                    }
                                });
                            },
                        error: function (ex) {
                            console.log(ex.responseText);
                        }
                    });
                    return false;
                });

                $.ajax({
                type: 'POST',
                url: '@Url.Action("ListGenero")',
                dataType: 'json',
                success: function(states) {
                    $.each(states, function (i, state) {
                            if ('@Model.GENERO' == state.Value) {
                                $("#GENERO").append('<option value="' + state.Value + '" selected>' + state.Text + '</option>');
                            } else {
                                $("#GENERO").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                            }
                    });
                },
                error: function (ex) {
                    console.log(ex.responseText);
                }
                });

                // barra progreso

                $.ajax({
                type: 'POST',
                url: '@Url.Action("ListUserProgress")',
                data: { id: '@Model.ID_DATOS_BASICOS' },
                dataType: 'json',
                success: function(states) {
                   // console.log(states);
                    var a = 6;
                    var b = 100;
                    var c = states + 1 ;
                    var respuesta = (b * c)/a;
                    $("#barra").width(respuesta+"%");
                    $("#barra").text(respuesta.toFixed(2) + "% Completo de su curriculum vitae");
                    $("#total").text("Perfil Completo " + respuesta.toFixed(2)+" % ");
                },
                error: function (ex) {
                    console.log(ex.responseText);
                }
                });

                // Catalagos Hv

                $.ajax({
                    type: "POST",
                    url: "/HvActitudes/Index",
                    data: '{IdP: "' + @Model.ID_DATOS_BASICOS + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#DivActitudes').html("<br>" +response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                $.ajax({
                    type: "POST",
                    url: "/HvConocimientos/Index",
                    data: '{IdP: "' + @Model.ID_DATOS_BASICOS + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#DivConocimientos').html("<br>"+response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                $.ajax({
                    type: "POST",
                    url: "/HvEstudios/Index",
                    data: '{IdP: "' + @Model.ID_DATOS_BASICOS + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#DivEstudios').html("<br>"+response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                $.ajax({
                    type: "POST",
                    url: "/HvExperiencia/Index",
                    data: '{IdP: "' + @Model.ID_DATOS_BASICOS + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#DivExperiencia').html("<br>"+response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                $.ajax({
                    type: "POST",
                    url: "/HvUbicacion/Index",
                    data: '{IdP: "' + @Model.ID_DATOS_BASICOS + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        //console.log(response);
                        $('#DivUbicacion').html("<br>"+response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

                console.log("ready!");
});
    </script>

}
<style>
    .progress {
        height: 50px;
    }

        .progress > svg {
            height: 100%;
            display: block;
        }
</style>

<div class="card mb-4 wow fadeIn">

    <!--Card content-->
    <div class="card-body d-sm-flex justify-content-between">
        <h3 class="card-title">Editar Datos Basicos</h3>
        <p class="card-text">Hoja de Vida / Datos Basicos </p>
    </div>

</div>

<div class="row wow fadeIn">
    <div class="col-md-12">

        @using (Html.BeginForm("EditPersona", "HvDatosBasicos", FormMethod.Post, htmlAttributes: new { id = "car-form", @name = "car-form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header text-right waves-effect" id="InformacionPersonal"><h4>Informacion Personal </h4> </div>
                <div class="card-body catalogo DivInformacionPersonalBody">
                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            <div class="row">

                                <div class="form-group col-md-4">

                                    <label class="col-sb-12 col-form-label"></label>
                                    <div class="col-sm-12 center-block text-center">
                                        <div id="DivImageName ">
                                            <figure>
                                                <img id="DivImageName2" class='img-fluid text-center img-responsive center-block'>
                                            </figure>
                                        </div>
                                    </div>

                                    <div id="total" class="col-sb-12 col-form-label center-block text-center "></div>
                                    <div class="col-sb-12 center-block text-center progress ">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated col-sb-8 " role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" id="barra"></div>
                                    </div>

                                    <label class="col-sb-12 col-form-label"><strong class="requerido"></strong> Cargar Imagen</label>
                                    <div class="col-sm-12 center-block text-center">
                                        <div class="custom-file center-block text-center">
                                            <input type="file" class="custom-file-input center-block text-center form-control" id="ImageNameArc1" name="ImageNameArc" aria-describedby="inputGroupFileAddon01">
                                            <label class="custom-file-label col-sb-12 form-control" for="ImageNameArc1">Choose file</label>
                                            @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>

                                <div class="form-group col-md-4">

                                    <label class="col-sb-12 col-form-label"><strong class="requerido"></strong> Nombres</label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.NOMBRES, new { htmlAttributes = new { @class = "form-control boder " } })
                                        @Html.ValidationMessageFor(model => model.NOMBRES, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Tipo Identificacion</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_CT_TIPO_IDENTIFICACION", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_TIPO_IDENTIFICACION, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Fecha de Nacimiento</label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.F_NACIMIENTO, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.F_NACIMIENTO, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Contraseña</label>
                                    <div class="col-sm-12">
                                        @*@Html.EditorFor(model => model.PasswordHash, new { @class = "form-control", placeholder = "************", @readonly = "readonly" })*@
                                        <input type="password" value="@Model.PasswordHash" name="PasswordHash" id="PasswordHash" class="form-control boder" placeholder="************" />
                                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-group col-md-4">

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Apellidos</label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.APELLIDOS, new { htmlAttributes = new { @class = "form-control boder " } })
                                        @Html.ValidationMessageFor(model => model.APELLIDOS, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Numero de Identificacion</label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.IDENTIFICACION, new { htmlAttributes = new { @class = "form-control boder " } })
                                        @Html.ValidationMessageFor(model => model.IDENTIFICACION, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> E-mail</label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control boder ", } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Confirmar Contraseña</label>
                                    <div class="col-sm-12">
                                        <input type="password" value="@Model.PasswordHash" name="PasswordHash2" id="PasswordHash2" class="form-control boder" placeholder="************" />
                                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="form-group col-md-4">

                                    <label class="col-sb-12 col-form-label"><strong class="requerido"></strong> Pais de Nacimiento</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_CT_PAIS", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_PAIS, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-group col-md-4">

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Departamento de Naciemto</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_CT_DEPTO", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_DEPTO, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-group col-md-4">

                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Ciudad de Nacimiento</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_CT_CIUDAD", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_CIUDAD, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="form-group col-md-4">
                                    <label class="col-sb-12 col-form-label"><strong class="requerido"></strong> Genero</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("GENERO", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.GENERO, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-4">
                                    <label class="col-sb-2 col-form-label"><strong class="requerido"></strong> Estado Civil</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_CT_ESTADO_CIVIL", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ID_CT_ESTADO_CIVIL, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-4">
                                    <label class="col-sb-12 col-form-label"><strong class="requerido"></strong> Perfil</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("ID_PERFIL", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control ID_PERFIL select2-container" })
                                        @Html.ValidationMessageFor(model => model.ID_PERFIL, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">

                                <div class="form-group col-md-12">
                                    <label class="col-sb-12 col-form-label"> <strong class="requerido"></strong> Descripcion del Perfil </label>
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.DESCRIPCION, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DESCRIPCION, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">

                                <div class="form-group col-md-12">
                                    <div class="col-sm-12 center-block text-center">
                                        <input type="submit" value="Modificar" class="btn btn-primary align-content-center" />
                                        <br />
                                        <span class="field-validation-valid text-danger" data-valmsg-for="ButtonSubmit" data-valmsg-replace="true"></span>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <br />
            <div class="card">
                <div class="card-header text-right waves-effect" id="Actitudes"><h4>Actitudes</h4> </div>
                <div class="card-body catalogo DivActitudesBody">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="#" aling="rigth" onclick="EjecutarModalSlim ('@Model.ID_DATOS_BASICOS','HvActitudes','Crear','CREAR ACTITUDES'); return false;" title="Modificar" style="color: #013ADF;"><i class="fa fa-address-book" aria-hidden="true"></i> Crear Actitudes</a>
                                    <div id="DivActitudes"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header text-right waves-effect" id="Conocimientos"><h4>Conocimientos</h4> </div>
                <div class="card-body catalogo DivConocimientosBody">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="#" onclick="EjecutarModalSlim ('@Model.ID_DATOS_BASICOS','HvConocimientos','Crear','CREAR CONOCIMIENTOS'); return false;" title="Crear" style="color: #013ADF;"><i class="fa fa-address-book" aria-hidden="true"></i> Crear Conocimientos</a>
                                    <div id="DivConocimientos"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header text-right waves-effect" id="Estudios"><h4>Estudios</h4> </div>
                <div class="card-body catalogo DivEstudiosBody">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="#" onclick="EjecutarModalSlim ('@Model.ID_DATOS_BASICOS','HvEstudios','Crear','CREAR ESTUDIOS'); return false;" title="Crear" style="color: #013ADF;"><i class="fa fa-address-book" aria-hidden="true"></i> Crear Estudios</a>
                                    <div id="DivEstudios"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header text-right waves-effect" id="Experiencia"><h4>Experiencia</h4> </div>
                <div class="card-body catalogo DivExperienciaBody">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="#" onclick="EjecutarModalSlim ('@Model.ID_DATOS_BASICOS','HvExperiencia','Crear','CREAR EXPERIENCIA'); return false;" title="Crear" style="color: #013ADF;"><i class="fa fa-address-book" aria-hidden="true"></i> Crear Experiencia</a>
                                    <div id="DivExperiencia"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="card">
                <div class="card-header text-right waves-effect" id="Ubicacion"><h4>Ubicacion</h4> </div>
                <div class="card-body catalogo DivUbicacionBody">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <a href="#" onclick="EjecutarModalSlim ('@Model.ID_DATOS_BASICOS','HvUbicacion','Crear','CREAR UBICACION'); return false;" title="Crear" style="color: #013ADF;"><i class="fa fa-address-book" aria-hidden="true"></i> Crear Ubicacion</a>
                                    <div id="DivUbicacion"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @Html.EditorFor(model => model.IMAGE_NAME, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_CIUDAD, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_DEPTO, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_PAIS, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_GENERO, new { htmlAttributes = new { @Style = "display:none" } })
            @Html.EditorFor(model => model.ID_DATOS_BASICOS, new { htmlAttributes = new { @style = "display:none", } })
            @Html.EditorFor(model => model.DIRECCION, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_ESTADO_CIVIL, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_TIPO_IDENTIFICACION, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.NOMBRE_PERFIL, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.IdAccount, new { htmlAttributes = new { @Style = "display:none" } })
            @Html.EditorFor(model => model.ID_USERS, new { htmlAttributes = new { @Style = "display:none" } })
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })
            @Html.EditorFor(model => model.USUARIO_CREO, new { htmlAttributes = new { @Style = "display:none" } })
            @Html.EditorFor(model => model.USUARIO_CREO_NOMBRE, new { htmlAttributes = new { @Style = "display:none", @Value = "ok" } })


        }

    </div>
</div>
