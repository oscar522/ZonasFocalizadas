@model AspNetIdentity.Models.CrearBaldiosExcelMvcModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CrearExcel</title>
</head>
<body>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
            crossorigin="anonymous"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var Errores = '@Model.Errores';
            var Status = '@Model.Status';
            $("#Err").html(Errores.replace(/&lt;br&gt;/g, '<br/>'));
            debugger;
            $("#Status").html(Status);

            $.getJSON('@Url.Content("~/Content/ConfigPdfUri.json")', function (data) {
                var UriLo = data.result[0].Uri;
                var UriPdf ="";
                var UriRe = data.result[0].UriRe;

                var pathname = window.location.href;

                if (pathname.indexOf(UriRe) > -1) {
                    UriPdf = UriRe;
                } else {
                    UriPdf = UriLo;
                }
                    var Url = 'http://' + UriPdf + '/Content/Pdfs/Muestras/LeerLeerInsertarBaldios.xlsx';
                    RutaConcat ='<a target="_blank" href="'+Url+'" style="color: #013ADF;""> Excel de Para Carga <i class="fa fa-eye">  </i></a></Br>';

                    $('#RutasAll').html(RutaConcat);
                    $('#Uri').val(UriPdf + '/Content/');
            });

        });
    </script>
    <div class="card mb-4 wow fadeIn">

        <!--Card content-->
        <div class="card-body d-sm-flex justify-content-between">
            <h3 class="card-title">Cargar Excel Baldios </h3>
        </div>

    </div>
    <div class="row wow fadeIn">
        <div class="col-md-12">
            <div class="card">
                @using (Html.BeginForm("CrearExcel", "BaldiosPersonaNatural", FormMethod.Post, new { enctype = "multipart/form-data", id = "CrearForm" }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        <label class="control-label col-md-2">Seleccione el Archivo </label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Soporte, new { type = "file", @class = "form-control col-sm-6" })
                            <br />
                            <div id="RutasAll"></div>
                            <div id="Uri"></div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="text-danger" id="Err"> </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="text-danger" id="Status"> </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cargar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</body>
</html>
