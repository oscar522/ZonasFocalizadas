//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspNetIdentity.WebApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ZonasFEntities : DbContext
    {
        public ZonasFEntities()
            : base("name=ZonasFEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CtCiudad> CtCiudad { get; set; }
        public virtual DbSet<CtDepto> CtDepto { get; set; }
        public virtual DbSet<CtGenero> CtGenero { get; set; }
        public virtual DbSet<CtPais> CtPais { get; set; }
        public virtual DbSet<CtTipoIdentificacion> CtTipoIdentificacion { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Accounts> Accounts { get; set; }
        public virtual DbSet<Accounts_AdditionalInformation> Accounts_AdditionalInformation { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Temp_AspNetUsersTests> Temp_AspNetUsersTests { get; set; }
        public virtual DbSet<Temp_AspNetUsersTests_Details> Temp_AspNetUsersTests_Details { get; set; }
        public virtual DbSet<ExpedienteDocumentos> ExpedienteDocumentos { get; set; }
        public virtual DbSet<RetencionDocumentalGrupo> RetencionDocumentalGrupo { get; set; }
        public virtual DbSet<RetencionDocumental> RetencionDocumental { get; set; }
        public virtual DbSet<BaldiosPersonaNatural> BaldiosPersonaNatural { get; set; }
        public virtual DbSet<Registro> Registro { get; set; }
        public virtual DbSet<ResumenTipificacion> ResumenTipificacion { get; set; }
        public virtual DbSet<CtCausas> CtCausas { get; set; }
        public virtual DbSet<ConceptoAsociado> ConceptoAsociado { get; set; }
        public virtual DbSet<ResumenTipificacionAll> ResumenTipificacionAll { get; set; }
        public virtual DbSet<TipoActividad> TipoActividad { get; set; }
        public virtual DbSet<ActDiaModalidad> ActDiaModalidad { get; set; }
        public virtual DbSet<ActDiaProceso> ActDiaProceso { get; set; }
        public virtual DbSet<ActividadesDiarias> ActividadesDiarias { get; set; }
        public virtual DbSet<CoceptosExpediente> CoceptosExpediente { get; set; }
        public virtual DbSet<ConceptosDocumentos> ConceptosDocumentos { get; set; }
        public virtual DbSet<Concepto> Concepto { get; set; }
        public virtual DbSet<ConceptoEstado> ConceptoEstado { get; set; }
        public virtual DbSet<ConceptoTipoSoporte> ConceptoTipoSoporte { get; set; }
        public virtual DbSet<ConceptoGestion> ConceptoGestion { get; set; }
        public virtual DbSet<CaracterizacionJuridicaCatalogos> CaracterizacionJuridicaCatalogos { get; set; }
        public virtual DbSet<CaracterizacionJuridica> CaracterizacionJuridica { get; set; }
        public virtual DbSet<CaracterizacionSolicitante> CaracterizacionSolicitante { get; set; }
        public virtual DbSet<PlGestionTable> PlGestionTable { get; set; }
        public virtual DbSet<CaracterizacionJuridicaResumen> CaracterizacionJuridicaResumen { get; set; }
    
        public virtual int AspNetUsers_Insertar(string firstName, string lastName, string email, string passwordHash, string id)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AspNetUsers_Insertar", firstNameParameter, lastNameParameter, emailParameter, passwordHashParameter, idParameter);
        }
    
        public virtual ObjectResult<ResumenTipificacion> PlResumenTipificacion(Nullable<int> idDeptoIn, Nullable<int> idCiudadIn, string idAspNetUser)
        {
            var idDeptoInParameter = idDeptoIn.HasValue ?
                new ObjectParameter("IdDeptoIn", idDeptoIn) :
                new ObjectParameter("IdDeptoIn", typeof(int));
    
            var idCiudadInParameter = idCiudadIn.HasValue ?
                new ObjectParameter("IdCiudadIn", idCiudadIn) :
                new ObjectParameter("IdCiudadIn", typeof(int));
    
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenTipificacion>("PlResumenTipificacion", idDeptoInParameter, idCiudadInParameter, idAspNetUserParameter);
        }
    
        public virtual ObjectResult<ResumenTipificacion> PlResumenTipificacion(Nullable<int> idDeptoIn, Nullable<int> idCiudadIn, string idAspNetUser, MergeOption mergeOption)
        {
            var idDeptoInParameter = idDeptoIn.HasValue ?
                new ObjectParameter("IdDeptoIn", idDeptoIn) :
                new ObjectParameter("IdDeptoIn", typeof(int));
    
            var idCiudadInParameter = idCiudadIn.HasValue ?
                new ObjectParameter("IdCiudadIn", idCiudadIn) :
                new ObjectParameter("IdCiudadIn", typeof(int));
    
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenTipificacion>("PlResumenTipificacion", mergeOption, idDeptoInParameter, idCiudadInParameter, idAspNetUserParameter);
        }
    
        public virtual ObjectResult<ResumenTipificacionAll> PlResumenTipificacionAll(Nullable<int> idDeptoIn, Nullable<int> idCiudadIn, string idAspNetUser)
        {
            var idDeptoInParameter = idDeptoIn.HasValue ?
                new ObjectParameter("IdDeptoIn", idDeptoIn) :
                new ObjectParameter("IdDeptoIn", typeof(int));
    
            var idCiudadInParameter = idCiudadIn.HasValue ?
                new ObjectParameter("IdCiudadIn", idCiudadIn) :
                new ObjectParameter("IdCiudadIn", typeof(int));
    
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenTipificacionAll>("PlResumenTipificacionAll", idDeptoInParameter, idCiudadInParameter, idAspNetUserParameter);
        }
    
        public virtual ObjectResult<ResumenTipificacionAll> PlResumenTipificacionAll(Nullable<int> idDeptoIn, Nullable<int> idCiudadIn, string idAspNetUser, MergeOption mergeOption)
        {
            var idDeptoInParameter = idDeptoIn.HasValue ?
                new ObjectParameter("IdDeptoIn", idDeptoIn) :
                new ObjectParameter("IdDeptoIn", typeof(int));
    
            var idCiudadInParameter = idCiudadIn.HasValue ?
                new ObjectParameter("IdCiudadIn", idCiudadIn) :
                new ObjectParameter("IdCiudadIn", typeof(int));
    
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ResumenTipificacionAll>("PlResumenTipificacionAll", mergeOption, idDeptoInParameter, idCiudadInParameter, idAspNetUserParameter);
        }
    
        public virtual ObjectResult<PlGestionTable> PlGestionUsers(string table, string mes1, string mes2, string mes, Nullable<int> dia, string usersId)
        {
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var mes1Parameter = mes1 != null ?
                new ObjectParameter("Mes1", mes1) :
                new ObjectParameter("Mes1", typeof(string));
    
            var mes2Parameter = mes2 != null ?
                new ObjectParameter("Mes2", mes2) :
                new ObjectParameter("Mes2", typeof(string));
    
            var mesParameter = mes != null ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(string));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            var usersIdParameter = usersId != null ?
                new ObjectParameter("UsersId", usersId) :
                new ObjectParameter("UsersId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlGestionTable>("PlGestionUsers", tableParameter, mes1Parameter, mes2Parameter, mesParameter, diaParameter, usersIdParameter);
        }
    
        public virtual ObjectResult<PlGestionTable> PlGestionUsers(string table, string mes1, string mes2, string mes, Nullable<int> dia, string usersId, MergeOption mergeOption)
        {
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var mes1Parameter = mes1 != null ?
                new ObjectParameter("Mes1", mes1) :
                new ObjectParameter("Mes1", typeof(string));
    
            var mes2Parameter = mes2 != null ?
                new ObjectParameter("Mes2", mes2) :
                new ObjectParameter("Mes2", typeof(string));
    
            var mesParameter = mes != null ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(string));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            var usersIdParameter = usersId != null ?
                new ObjectParameter("UsersId", usersId) :
                new ObjectParameter("UsersId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlGestionTable>("PlGestionUsers", mergeOption, tableParameter, mes1Parameter, mes2Parameter, mesParameter, diaParameter, usersIdParameter);
        }
    
        public virtual ObjectResult<CaracterizacionJuridicaResumen> ResumenCaracterizacionJuridica(string idAspNetUser)
        {
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CaracterizacionJuridicaResumen>("ResumenCaracterizacionJuridica", idAspNetUserParameter);
        }
    
        public virtual ObjectResult<CaracterizacionJuridicaResumen> ResumenCaracterizacionJuridica(string idAspNetUser, MergeOption mergeOption)
        {
            var idAspNetUserParameter = idAspNetUser != null ?
                new ObjectParameter("IdAspNetUser", idAspNetUser) :
                new ObjectParameter("IdAspNetUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CaracterizacionJuridicaResumen>("ResumenCaracterizacionJuridica", mergeOption, idAspNetUserParameter);
        }
    }
}
